shell中的变量
-----------------------------------------------------------------------------
引用变量存储的值时，必须加上$符号
     echo $PATH
为变量赋值时，不需要加上$符号
     PATH=/usr/sbin

[root@cookie cookie]# myname=cookie
[root@cookie cookie]# echo "The variable myname is $myname"
The variable myname is cookie


---------------------------------------------------------------------------------------
shell完全没有“类型”的概念，如果一定要说类型，那么任何变量都是字符串，但是有一些函数在处理字符串时会将其中包含的数字字符当成数值来处理，在其他计算机语言中，这种错误会在编译期间捕获。因为shell脚本是被解释而不是被编译，所以无法捕获到这种错误。
shell变量的另一个特别之处是在使用它们之前不必显式地进行申明————没有赋值得变量就等于包含空字符串的变量。引用未定义的变量不会抛出错误。

[root@cookie cookie]# cat unset.sh 
echo "The variable myname is $myname"
myname="cookie"
echo "The variable myname is $myname"
[root@cookie cookie]# ./unset.sh 
The variable myname is 
The variable myname is cookie

注：以上unset.sh文件权限为755


--------------------------------------------------------------------------------------
变量赋值的方式主要有3种
1.显式定义：VAR=value
     等号两边不允许有空格，否则会被当成带有参数的命令，如:ls -l foo
     [root@cookie cookie]# variable=foo
     [root@cookie cookie]# echo $variable
     foo
2.读取：read VAR
     交互式运行
     [root@cookie cookie]# cat firsh.sh 
     echo -n "Enter your name:"
     read myname
     echo "Hello $myname"
     [root@cookie cookie]# ./firsh.sh 
     Enter your name:cookie
     Hello cookie
3.命令替换：VAR=`date`、VAR=$(date)
